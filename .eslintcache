[{"E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\index.tsx":"1","E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\reportWebVitals.ts":"2","E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\App.tsx":"3","E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\components\\home\\home.tsx":"4","E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\components\\home\\diary.tsx":"5","E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\components\\home\\entry.tsx":"6","E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\components\\home\\users.tsx":"7","E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\services\\mirage\\server.ts":"8","E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\store\\store.ts":"9","E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\features\\auth\\userSlice.ts":"10","E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\services\\mirage\\routes\\user.ts":"11","E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\services\\api.ts":"12","E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\components\\auth\\signup\\signup.tsx":"13","E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\features\\auth\\authSlice.ts":"14","E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\rootReducer.ts":"15"},{"size":746,"mtime":1608194476526,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1606701893145,"results":"18","hashOfConfig":"17"},{"size":757,"mtime":1608476926261,"results":"19","hashOfConfig":"17"},{"size":1375,"mtime":1608135573495,"results":"20","hashOfConfig":"17"},{"size":755,"mtime":1608118365378,"results":"21","hashOfConfig":"17"},{"size":1215,"mtime":1608119420410,"results":"22","hashOfConfig":"17"},{"size":2115,"mtime":1608473749421,"results":"23","hashOfConfig":"17"},{"size":1171,"mtime":1608478259729,"results":"24","hashOfConfig":"17"},{"size":347,"mtime":1608459501706,"results":"25","hashOfConfig":"17"},{"size":453,"mtime":1608472951155,"results":"26","hashOfConfig":"17"},{"size":1080,"mtime":1608478236905,"results":"27","hashOfConfig":"17"},{"size":958,"mtime":1608365731758,"results":"28","hashOfConfig":"17"},{"size":7280,"mtime":1608478334266,"results":"29","hashOfConfig":"17"},{"size":790,"mtime":1608434417470,"results":"30","hashOfConfig":"17"},{"size":444,"mtime":1608468967829,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"e354sb",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\index.tsx",[],["69","70"],"E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\reportWebVitals.ts",[],"E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\App.tsx",[],"E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\components\\home\\home.tsx",["71","72","73","74"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Diary from './diary';\r\nimport Entry from './entry';\r\nimport Users from './users';\r\n\r\nimport {\r\n  Grid,\r\n  Hidden,\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    padding : 2,\r\n    display: \"flex\",\r\n    background: \"linear-gradient(90deg, #1a237e , #b2ebf2)\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  container: {\r\n    borderStyle: \"solid\",\r\n    width : '100%',\r\n    borderRadius: 10,\r\n    borderColor: '#1a237e',\r\n    borderWidth: 4,\r\n    padding : 5,\r\n    margin: 2,\r\n    height: \"95vh\",\r\n    background : '#fafafa',\r\n  },\r\n}));\r\n\r\nexport default function Home() {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Grid item md={3} container alignItems=\"center\">\r\n          <Box className={classes.container}>\r\n            <Diary/>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item md={6} container alignItems=\"center\">\r\n          <Box className={classes.container}>\r\n            <Entry/>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item md={3} container alignItems=\"center\">\r\n          <Box className={classes.container}>\r\n            <Users/>\r\n          </Box>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\components\\home\\diary.tsx",["75","76","77"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nimport {\r\n  Grid,\r\n  Hidden,\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n      width :'100%',\r\n      background : '#fff',\r\n\r\n    },  \r\n    createButton: {\r\n      width :'100%',\r\n      color: '#000',\r\n      background : '#b0bec5'\r\n      \r\n    },  \r\n    \r\n  }));\r\n\r\nexport default function Diary() {\r\n    const classes = useStyle();\r\n\r\n  return (\r\n    <div className = {classes.root}>\r\n      <Grid>\r\n        <Box>\r\n          <Button className = {classes.createButton} variant = \"outlined\">\r\n          create new\r\n          </Button>\r\n        </Box>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\components\\home\\entry.tsx",["78","79"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nimport {\r\n  Grid,\r\n  Hidden,\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    background: \"#fff\",\r\n  },\r\n  textfield: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  Button: {\r\n    width: \"100%\",\r\n    color: \"#000\",\r\n    background: \"#b0bec5\",\r\n  },\r\n}));\r\n\r\nexport default function Entry() {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid>\r\n        <Box>\r\n          <TextField\r\n            className={classes.textfield}\r\n            id=\"outlined-basic\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n          />\r\n        </Box>\r\n        <Box py={1}>\r\n          <TextField\r\n            className={classes.textfield}\r\n            id=\"outlined-multiline-static\"\r\n            label=\"Description\"\r\n            multiline\r\n            rows={22}\r\n            variant=\"outlined\"\r\n          />\r\n        </Box>\r\n        <Box py={1}>\r\n          <Button className={classes.Button} variant=\"outlined\">\r\n            save\r\n          </Button>\r\n        </Box>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\components\\home\\users.tsx",["80","81","82"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {useSelector} from 'react-redux';\r\nimport { User } from \"../../interfaces/interfaces\";\r\n// import {useAppDispatch} from '../../store/store';\r\n// import { sendUser } from '../../features/auth/userSlice';\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport {\r\n  Grid,\r\n  Hidden,\r\n  List,\r\n  ListItem,\r\n  Avatar,\r\n  Divider,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    background: \"#fff\",\r\n  },\r\n  createButton: {\r\n    width: \"100%\",\r\n    color: \"#000\",\r\n    background: \"#b0bec5\",\r\n  },\r\n\r\n  list: {\r\n    width: \"100%\",\r\n    maxWidth: \"36ch\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\n\r\nexport default function Users() {\r\n  const classes = useStyle();\r\n\r\n  const {user} : any  = useSelector(\r\n    (state:User)=> state\r\n  );\r\n\r\n  console.log(user.username)  \r\n\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid>\r\n        <Box>\r\n          <List className={classes.root}>\r\n            <ListItem alignItems=\"flex-start\">\r\n              <ListItemAvatar>\r\n                <Avatar alt={user.username} src=\"/static/images/avatar/1.jpg\" />\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={user.username}\r\n                secondary={\r\n                  <React.Fragment>\r\n                    <Typography\r\n                      component=\"span\"\r\n                      variant=\"body2\"\r\n                      className={classes.inline}\r\n                      color=\"textPrimary\"\r\n                    >\r\n                      {user.email}\r\n                      \r\n                    </Typography>\r\n                    {\" — I'll be in your neighborhood doing errands this…\"}\r\n                  </React.Fragment>\r\n                }\r\n              />\r\n            </ListItem>\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n          </List>\r\n        </Box>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\services\\mirage\\server.ts",["83"],"import {\r\n  Server,\r\n  Model,\r\n  Factory,\r\n  belongsTo,\r\n  hasMany,\r\n  Response,\r\n  Request,\r\n} from \"miragejs\";\r\nimport user from \"./routes/user\";\r\n\r\nexport const handleError = (error: any , message = \"an error message\") => {  \r\n\r\n  return new Response(400, undefined, {\r\n    data: {\r\n      message,\r\n      isError: true,\r\n    },\r\n  });\r\n};\r\n\r\nexport const setupServer = (env?: string): Server => {\r\n  return new Server({\r\n    environment: env ?? \"development\",\r\n\r\n    models: {\r\n      entry: Model.extend({\r\n        diary: belongsTo(),\r\n      }),\r\n      diary: Model.extend({\r\n        entry: hasMany(),\r\n        user: belongsTo(),\r\n      }),\r\n      user: Model.extend({\r\n        diary: hasMany(),\r\n      }),\r\n    },\r\n\r\n    factories: {\r\n      user: Factory.extend({\r\n        username: \"hamid\",\r\n        password: \"123\",\r\n        email: \"hamid@gmail.com\",\r\n      }),\r\n\r\n     \r\n    },\r\n\r\n    seeds: (server): any => {\r\n      server.create(\"user\");\r\n      \r\n    },\r\n\r\n    routes(): void {\r\n      this.urlPrefix = \"https://diaries.app\";\r\n\r\n      this.post(\"/auth/signup\", user.signup);  \r\n      this.post(\"/auth/signin\", user.signin);          \r\n      \r\n    },\r\n  });\r\n};\r\n","E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\store\\store.ts",[],"E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\features\\auth\\userSlice.ts",["84"],"E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\services\\mirage\\routes\\user.ts",["85"],"E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\services\\api.ts",[],"E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\components\\auth\\signup\\signup.tsx",["86","87"],"E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\features\\auth\\authSlice.ts",["88"],"import { createSlice} from '@reduxjs/toolkit';\r\n\r\ninterface AuthState {\r\n\r\n    token : string | null,\r\n    isAuthenticated : boolean \r\n}\r\n\r\n\r\nconst auth = createSlice({\r\n    name : 'auth',\r\n\r\n    initialState : <AuthState> {\r\n    token : null,\r\n    isAuthenticated : false\r\n    },\r\n\r\n    reducers : {\r\n\r\n        saveToken( state, {payload}) {\r\n            if(payload) {\r\n\r\n                state.token = payload\r\n            }\r\n        },\r\n\r\n        clearToken (state){\r\n\r\n            state.token = null\r\n        },\r\n\r\n        setAuthState ( state , {payload}){\r\n\r\n            if(payload){\r\n\r\n                state.isAuthenticated = payload\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n});\r\n\r\nexport const { saveToken , clearToken , setAuthState} = auth.actions;\r\n\r\nexport default auth.reducer;\r\n\r\n","E:\\react\\bootcamp\\diaries_app_reduxtoolkit\\src\\rootReducer.ts",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":9,"column":3,"nodeType":"95","messageId":"96","endLine":9,"endColumn":9},{"ruleId":"93","severity":1,"message":"97","line":11,"column":3,"nodeType":"95","messageId":"96","endLine":11,"endColumn":9},{"ruleId":"93","severity":1,"message":"98","line":12,"column":3,"nodeType":"95","messageId":"96","endLine":12,"endColumn":12},{"ruleId":"93","severity":1,"message":"99","line":13,"column":3,"nodeType":"95","messageId":"96","endLine":13,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":6,"column":3,"nodeType":"95","messageId":"96","endLine":6,"endColumn":9},{"ruleId":"93","severity":1,"message":"98","line":9,"column":3,"nodeType":"95","messageId":"96","endLine":9,"endColumn":12},{"ruleId":"93","severity":1,"message":"99","line":10,"column":3,"nodeType":"95","messageId":"96","endLine":10,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":6,"column":3,"nodeType":"95","messageId":"96","endLine":6,"endColumn":9},{"ruleId":"93","severity":1,"message":"99","line":10,"column":3,"nodeType":"95","messageId":"96","endLine":10,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":15,"column":3,"nodeType":"95","messageId":"96","endLine":15,"endColumn":9},{"ruleId":"93","severity":1,"message":"97","line":23,"column":3,"nodeType":"95","messageId":"96","endLine":23,"endColumn":9},{"ruleId":"93","severity":1,"message":"98","line":24,"column":3,"nodeType":"95","messageId":"96","endLine":24,"endColumn":12},{"ruleId":"93","severity":1,"message":"100","line":8,"column":3,"nodeType":"95","messageId":"96","endLine":8,"endColumn":10},{"ruleId":"93","severity":1,"message":"101","line":1,"column":22,"nodeType":"95","messageId":"96","endLine":1,"endColumn":35},{"ruleId":"102","severity":1,"message":"103","line":47,"column":1,"nodeType":"104","endLine":47,"endColumn":35},{"ruleId":"93","severity":1,"message":"105","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":29},{"ruleId":"93","severity":1,"message":"106","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":14},{"ruleId":"107","severity":1,"message":"108","line":13,"column":20,"nodeType":"109","messageId":"110","endLine":16,"endColumn":6},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"@typescript-eslint/no-unused-vars","'Hidden' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'TextField' is defined but never used.","'Typography' is defined but never used.","'Request' is defined but never used.","'PayloadAction' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'FC' is defined but never used.","'Link' is defined but never used.","@typescript-eslint/consistent-type-assertions","Use 'as AuthState' instead of '<AuthState>'.","TSTypeAssertion","as","no-global-assign","no-unsafe-negation"]